【VRChat LogMonitor to OSC】

最終更新 : 2022/08/25 風庭ゆい


【はじめに】----------------------------

このデータはVRChatのログをリアルタイムで解析し、
OSCでVRChatに送ることでアバターに現在のインスタンス人数と滞在時間を
表示することができるスクリプトとアバターギミックのセットです。

βと書いてある通り試作及び開発版です。
ところどころ作りが荒くセットアップもあまり簡単ではありませんが、
気になった方はぜひ使ってみてください……！


【利用規約】----------------------------

とりあえずいまのところMITLicenseですが、
再配布、販売などは常識の範囲内でお願いします。
仕様が変わる可能性があります(まだβ版ですからね)

あとどこかに同梱したいなど、報告はいりませんがあると私が嬉しいです。


【同梱ファイル】----------------------------

・Log_Monitor_v_X_X_X.exe
　ログを解析しOSC送信をするアプリケーションです。
　VRChatを起動した後に実行します。

・Log_Monitor_Setup_Beta.unitypackage
　アバターセットアップ用のUnityPackageです。

・ReadMe.txt
　当データの説明です。
　セットアップ方法などが記載されています。

・Log_Monitor_Texture.ai
　テクスチャのIllustratorデータです。

・texture
　unitypackage内で使用しているテクスチャデータです。

・main.py
　コンパイル前のPythonスクリプトです。
　Python3系及びpython-oscが導入してあれば実行できます。


【基本仕様】----------------------------

・マテリアル数 : 9
・パラメータ数 : 2
・メモリ占有数 : 9 bit
・テクスチャ数 : 2

　Unity2019.4.31.f1 動作確認済み
　VRCSDK3-AVATAR-2022.06.03_Public 動作確認済み
　VRChat build 1226 動作確認済み

　EXEアプリケーション
　・Windows 10 21H1 動作確認済み

　Pythonスクリプト
　・Python3系及びpython-osc導入機器にて動作できます


【セットアップ方法】----------------------------

1.VRCSDK3とアバターのパッケージ、その他必要なアセットをシーン上にセットアップしてください。
　既に導入済みのアバターにも適用できると思います。(その場合バックアップをお願いします)

2.アバターが原点(0,0,0)にあることを確認してください。異なる場合、原点に移動させてください。

3.同梱のUnityPackageをインポートします。

4.Asset以下にYuis_Miniature_Garden/Log_Monitorファイルがセットアップされますので参照します。

5.[Log_Monitor.prefab]ファイルをヒエラルキーにドラッグアンドドロップし、
   アバターのルートオブジェクトの子に置いてください。

※ルートオブジェクトの子以外の場所(孫やArmature以下のボーンなど)に置くと、
　アニメーションの参照がMissingになり正常に動作しません。
　この場合、アニメーションデータのパスをテキストエディタなどで書き換えることで対応が可能です。

6.[Log_Monitor]オブジェクトには元から座標が設定されています。
  Positionの値にアバターのビューポイントの座標を加算して移動させてください。
  これでVRChatの視界内のマイクアイコンのすぐ横にオブジェクトを移動させることができます。

※自分で別の場所に移動したい場合は適宜移動させてください。

7.アバターのHeadボーンを右クリックして空オブジェクトを生成し、Headと同じ階層(Neckの子)に移動させます。
  ここでは空オブジェクトの名前を適当に[FakeHead]とします。

8.[FakeHead]にParent Constraintを設定します。SourcesにHeadを入れてZeroボタンを押して初期化します。

9.[Log_Monitor]オブジェクトの下に[Log_Monitor_Constraint]オブジェクトがあります。
  これをドラッグアンドドロップでFakeHeadに移動させます。

10.[Log_Monitor]オブジェクトにParent Constraintが設定されていますので、Zeroボタンを押して初期化します。

11.[Animator_Layer_Sample]ファイルを参照し、その中にあるパラメータをアバターのFX Layerに作成します。
   - [Log_Monitor] int
   - [Log_Monitor_ON] bool

12.[Animator_Layer_Sample]内のLayersにある2つのレイヤーをアバターのFX Layerにコピーします。
   同じ名前のLayerを作成し、ステート全てを選択してCtrl+Cでコピー、右クリック→Pasteでペーストできます。

※デフォルトステート(オレンジ色のステート)が大体ズレるので、
　ペーストしたあとEmptyステートを右クリック→[Set us Layer Default State]でデフォルトに設定できます。

13.アバターのEXParameterにパラメータを追加します。追加するパラメータは[EXParameter_Sample]にサンプルがあります。
   - [Log_Monitor] int

14.[Log_Monitor]オブジェクトのチェックを外し、非表示状態にします。

15.お疲れさまでした。以上でセットアップ完了です。新しいブループリントIDでアップロードしてください。


【使い方】----------------------------

1.Steamのプロパティから、VRChatの起動オプションに[--enable-sdk-log-levels]を追加します。

2.VRChatが起動しているPCでLog_Monitor_v_X_X_X.exeを起動します。

3.セットアップ済みのアバターに着替えて、EXMenuからOSCが有効になっていることを確認します。

4.表示用オブジェクトは自動で表示されます。

5.VRChatがOSCを受信し、オブジェクト部分にデータが反映されます。



【更新履歴】----------------------------

〇2022/08/23 【Beta v1.0.0】
-Boothにてベータ版リリース

〇2022/08/23 【Beta v1.1.0】
-シェーダー同梱によりカメラやミラーに映らなくなりました

〇2022/08/23 【Beta v1.2.0】
-シェーダーのRenderQueueを調整

〇2022/08/25 【Beta v1.3.0】
-シェーダーに透明度設定機能を追加
-スクリプトの動作を大幅変更, パラメータ反映にかかる時間が短くなりました

〇2022/08/26 【Beta v1.3.1】
-アバター変更時やワールド移動時に表示がおかしくなる問題を修正


【開発環境】----------------------------

-Windows 10 Home 21H1 Build 19041-SP0
-Python 3.8.2
-python-osc 1.8.0
-PyInstaller 4.9
-Adobe Illustrator 2022

